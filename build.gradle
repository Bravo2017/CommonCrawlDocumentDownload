apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations.all { 
	all*.exclude group: 'org.apache.hadoop'		// not found on Maven Central?
}

dependencies {
    compile 'org.dstadler:commons-dost:1.0.0.+'
    compile 'org.apache.httpcomponents:httpclient:4.5.1'
    compile 'org.netpreserve.commons:webarchive-commons:1.1.6'
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.3'    

    // for commoncrawl-source
    compile 'log4j:log4j:1.2.17'
    compile 'org.jsoup:jsoup:1.8.1'

	testCompile "junit:junit:4+"
    testCompile 'org.dstadler:commons-test:1.0.0.+'
}

// work around unnecessary timestamp in generated file which always causes dirty files in version control
// https://issues.gradle.org/browse/GRADLE-2293
task adjustEclipseSettingsFile << {
	ant.replaceregexp(match:'^#.*', replace:'', flags:'g', byline:true) {
		fileset(dir: project.projectDir, includes: '.settings/org.eclipse.jdt.core.prefs,.settings/com.google.gdt.eclipse.core.prefs')
	}
}
task sortEclipseSettingsFile << {
	new File(project.projectDir, '.settings/org.eclipse.jdt.core.prefs').with { it.text = it.readLines().findAll { it }.sort().join('\n') }
	new File(project.projectDir, '.classpath').with { it.text = it.readLines().findAll { it }.unique().join('\n') }
	File file = new File(project.projectDir, '.settings/com.google.gdt.eclipse.core.prefs');
	if(file.exists()) {
		file.with { it.text = it.readLines().findAll { it }.sort().join('\n') }
	}
	ant.fixcrlf(srcDir: '.settings', eol: 'lf')
}
eclipseJdt.finalizedBy adjustEclipseSettingsFile
eclipseJdt.finalizedBy sortEclipseSettingsFile

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}

task adjustWrapperPropertiesFile << {
	ant.replaceregexp(match:'^#.*', replace:'', flags:'g', byline:true) {
		fileset(dir: project.projectDir, includes: 'gradle/wrapper/gradle-wrapper.properties')
	}
	new File(project.projectDir, 'gradle/wrapper/gradle-wrapper.properties').with { it.text = it.readLines().findAll { it }.sort().join('\n') }
	ant.fixcrlf(file: 'gradle/wrapper/gradle-wrapper.properties', eol: 'lf')
}
wrapper.finalizedBy adjustWrapperPropertiesFile

test {
	systemProperties = System.properties

	// show standard out and standard error of the test JVM(s) on the console
	//testLogging.showStandardStreams = true

	// http://forums.gradle.org/gradle/topics/jacoco_related_failure_in_multiproject_build
	systemProperties['user.dir'] = workingDir
}

jacoco {
	toolVersion = "0.7.5.201505241946"
}


task lookupURLs(type:JavaExec,dependsOn: compileJava) {
	description = 'Reads the current Common Crawl URL index data and extracts all URLs for interesting mime-types or file extensions'
	
	main = 'org.dstadler.commoncrawl.index.DownloadURLIndex'
	classpath = sourceSets.main.runtimeClasspath
}


task downloadOldIndex(type:JavaExec,dependsOn: compileJava) {
	description = 'Reading blocks at beginning or the last stored block-number and download binary data from the common crawl archives'
	
	main = 'org.dstadler.commoncrawl.oldindex.ReadAndDownload'
	classpath = sourceSets.main.runtimeClasspath
}

task downloadDocuments(type:JavaExec,dependsOn: compileJava) {
	description = 'Uses the URLs listed in commoncrawl.txt to download the documents from the Common Crawl'
	
	main = 'org.dstadler.commoncrawl.index.DownloadFromCommonCrawl'
	classpath = sourceSets.main.runtimeClasspath
}
